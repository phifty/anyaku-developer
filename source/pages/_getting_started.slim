h1 Getting started

p
  ' Anyaku can be used by developers as a generic backend for their <strong>Android Apps</strong>. It's a
  ' <strong>Backend as a Service (BaaS)</strong> that stores the data only encrypted. This enables you to easily add
  ' <strong>end-to-end encryption</strong> to your application.
p
  ' To jump right in, you find example code for the most common operations of your App right below.

tabs
  pane title="Kotlin"
    pre
      code.kotlin val generator = Generator()
                  val locker = Locker()
                  val client = Client(AndroidTransport())
  pane title="Java"
    pre
      code.java final Generator generator = new Generator();
                final Locker locker = new Locker();
                final Client client = new Client(new AndroidTransport());

h2 Create a document (Sign up)
tabs
  pane title="Kotlin"
    pre
      code.kotlin val document = generator.document()

                  val password = generator.password("secret")
                  val encryptedPrivateKey = locker.lock(document.privateKey, password)

                  val lockedDocument = locker.lock(document, encryptedPrivateKey)

                  client.createDocument(lockedDocument)

                  // store the document.id somewhere...
  pane title="Java"
    pre
      code.java UnlockedDocument document = generator.document();
                Password password = generator.password("secret");
                PasswordEncryptedKey encryptedPrivateKey = locker.lock(document.getPrivateKey(), password);

                SignedLockedDocument lockedDocument = locker.lock(document, encryptedPrivateKey);

                client.createDocument(lockedDocument);

                // store document.getId() somewhere...

h2 Open a document (Sign in)
tabs
  pane title="Kotlin"
    pre
      code.kotlin val lockedDocument = client.fetchDocument(documentId)

                  val encryptedPrivateKey = lockedDocument!!.privateKey
                  val password = generator.password("secret", encryptedPrivateKey.hashParameters)
                  val privateKey = locker.unlock(encryptedPrivateKey, password)

                  val document = locker.unlock(lockedDocument, privateKey)

                  // use the document...
  pane title="Java"
    pre
      code.java SignedLockedDocument lockedDocument = client.fetchDocument(documentId);

                PasswordEncryptedKey encryptedPrivateKey = lockedDocument.getPrivateKey();
                Password password = generator.password("secret", encryptedPrivateKey.getHashParameters());
                Key privateKey = locker.unlock(encryptedPrivateKey, password);

                UnlockedDocument document = locker.unlock(lockedDocument, privateKey);

                // use the document...

h2 Update a document
tabs
  pane title="Kotlin"
    pre
      code.kotlin val basicModule = document.sections.publicSection.modules[Basic.id] as Basic
                  basicModule.name = "Jane Doe"

                  val updatedLockedDocument = locker.lock(document, encryptedPrivateKey)

                  client.updateDocument(updatedLockedDocument)
  pane title="Java"
    pre
      code.java Basic basicModule =
                    (Basic)document.getSections().getPublicSection().getModules().get(Basic.id);
                basicModule.name = "Jane Doe";

                SignedLockedDocument updatedLockedDocument = locker.lock(document, encryptedPrivateKey);

                client.updateDocument(updatedLockedDocument);

p
  ' To learn more about how Anyaku is functioning, follow up to <a href="/how-it-works">how it works</a>.
